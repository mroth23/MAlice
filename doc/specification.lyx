#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
MAlice language specification
\end_layout

\begin_layout Author
Jamie Ridler, Moritz Roth
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Keywords
\end_layout

\begin_layout Standard
There are several keywords that can't be used as identifiers in MAlice programs.
\end_layout

\begin_layout Subsection
Delimiters
\end_layout

\begin_layout Standard
Valid delimiters between statements are 
\emph on

\begin_inset Formula $,$
\end_inset

 
\emph default
|
\emph on
 .
 
\emph default
|
\emph on
 and 
\emph default
|
\emph on
 but 
\emph default
|
\emph on
 then
\emph default
.
 They can be used both in line and at the end of the line.
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Standard
A function always starts with the keyword 
\begin_inset Formula $opened$
\end_inset

 and ends with 
\emph on

\begin_inset Formula $closed$
\end_inset

.
 
\emph default
It consists of a list of statements separated by delimiters.
\end_layout

\begin_layout Section
Types
\end_layout

\begin_layout Standard
There are two types in MAlice, 
\begin_inset Formula $Integer$
\end_inset

 and 
\begin_inset Formula $Letter$
\end_inset

.
 Implicit casts between these types are not supported.
\end_layout

\begin_layout Section
Grammar
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<program>            ::= <statement> <statement-list>
\end_layout

\begin_layout Plain Layout

<statement>          ::= <declaration> | <assignment> | <unary>
\end_layout

\begin_layout Plain Layout

<expression>         ::= <literal> |
\end_layout

\begin_layout Plain Layout

                         <expression> <binOp> <expression> <separator>
\end_layout

\begin_layout Plain Layout

<binOp>              ::= '+' |
\end_layout

\begin_layout Plain Layout

                         '-' |
\end_layout

\begin_layout Plain Layout

                         '*' |
\end_layout

\begin_layout Plain Layout

                         '/' |
\end_layout

\begin_layout Plain Layout

                         '%' |
\end_layout

\begin_layout Plain Layout

                         '|' |
\end_layout

\begin_layout Plain Layout

                         '&' |
\end_layout

\begin_layout Plain Layout

                         '^'
\end_layout

\begin_layout Plain Layout

<literal>            ::= <id> | <const> | <char>
\end_layout

\begin_layout Plain Layout

<unary>              ::= <id> 'ate' <separator> |
\end_layout

\begin_layout Plain Layout

                         <id> 'drank' <separator> |
\end_layout

\begin_layout Plain Layout

                         <expression> 'said Alice' <separator>
\end_layout

\begin_layout Plain Layout

<declaration>        ::= <id> 'was a' <type> <separator> |
\end_layout

\begin_layout Plain Layout

                         <id> 'was a' <type> 'too' <separator>
\end_layout

\begin_layout Plain Layout

<assignment>         ::= <id> 'became' <expression> <separator>
\end_layout

\begin_layout Plain Layout

<separator>          ::= ',' | '.' | 'and' | 'but' | 'then'
\end_layout

\begin_layout Plain Layout

<type>               ::= 'number' | 'letter'
\end_layout

\end_inset


\end_layout

\begin_layout Section
Semantics
\end_layout

\begin_layout Subsection
Run-time errors
\end_layout

\begin_layout Subsubsection
Division by zero
\end_layout

\begin_layout Standard
Division by zero is not a valid operation, and thus the program behaviour
 after dividing by zero is undefined.
\end_layout

\begin_layout Subsection
Compile-time errors
\end_layout

\begin_layout Subsubsection
Double declaration
\end_layout

\begin_layout Standard
A variable must not be declared twice in the same scope, and doing so leads
 to a compile-time error.
\end_layout

\begin_layout Subsubsection
Type errors
\end_layout

\begin_layout Standard
Assignment statements and certain unary operators only work on correct,
 matching types.
 Using them with other types leads to an error, as implicit type casting
 is not supported.
\end_layout

\end_body
\end_document
